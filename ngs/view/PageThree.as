package ngs.view{  import flash.display.MovieClip;  import flash.events.MouseEvent;  import flash.geom.Point;  import com.greensock.TweenLite;  import com.greensock.TweenMax;  import com.greensock.plugins.TweenPlugin;  import com.greensock.plugins.RoundPropsPlugin;  import com.greensock.plugins.ScrollRectPlugin;  import com.greensock.easing.*;  import ngs.model.Session;  import ngs.model.NgasConsum;  import ngs.model.OilConsum;  import ngs.model.CoalConsum;  import flash.events.Event;  import com.greensock.TimelineMax;  public class PageThree extends MovieClip  {    private var _session:Session;    public var ngasConsum:NgasConsum;    public var oilConsum:OilConsum;    public var coalConsum:CoalConsum;        public var animateIn:TimelineMax = new TimelineMax( { paused: true } );    public var animateFirstIn:TimelineMax = new TimelineMax( { paused: true } );        public function PageThree()    {      TweenPlugin.activate([RoundPropsPlugin, ScrollRectPlugin]);    }        private function configure():void    {          }        public function set session(m:*):void    {      _session = m;      register();       init();    }        public function get session():Session    {      return _session;    }    public function init():void    {        slider0.session = session;      slider1.session = session;      slider2.session = session;            slider0.model = oilConsum;      slider1.model = ngasConsum;      slider2.model = coalConsum;            oilConsum.addEventListener(OilConsum.VALUE, updateOilChart);      ngasConsum.addEventListener(NgasConsum.VALUE, updateNgasChart);      coalConsum.addEventListener(CoalConsum.VALUE, updateCoalChart);            avg0.addEventListener(MouseEvent.CLICK, avg_handler);      avg0.addEventListener(MouseEvent.ROLL_OVER, avg_handler);      avg0.addEventListener(MouseEvent.ROLL_OUT, avg_handler);      avg0.buttonMode = true;            avg1.addEventListener(MouseEvent.CLICK, avg_handler);      avg1.addEventListener(MouseEvent.ROLL_OVER, avg_handler);      avg1.addEventListener(MouseEvent.ROLL_OUT, avg_handler);      avg1.buttonMode = true;            avg2.addEventListener(MouseEvent.CLICK, avg_handler);      avg2.addEventListener(MouseEvent.ROLL_OVER, avg_handler);      avg2.addEventListener(MouseEvent.ROLL_OUT, avg_handler);      avg2.buttonMode = true;            function avg_handler(event:MouseEvent):void      {        switch (event.type)        {          case MouseEvent.CLICK:            if (event.currentTarget.name == "avg0") slider0.checkLocation(50);            if (event.currentTarget.name == "avg1") slider1.checkLocation(70);            if (event.currentTarget.name == "avg2") slider2.checkLocation(90);            break;          case MouseEvent.ROLL_OVER:            TweenLite.to(event.currentTarget.txt, 0.5, { tint: 0x333333, ease: Expo.easeOut } );            break;          case MouseEvent.ROLL_OUT:            TweenLite.to(event.currentTarget.txt, 0.5, { removeTint: true, ease: Expo.easeOut } );            break;        }      }                  hotspot.addEventListener(MouseEvent.CLICK, handler);            function handler(event:MouseEvent):void      {        postTransitionState();        oilChart.postTransitionState();        ngasChart.postTransitionState();        coalChart.postTransitionState();        transitionInComplete();      }          }        public function register():void    {      oilChart.def_width = oilChart.width;      ngasChart.def_width = ngasChart.width;      coalChart.def_width = coalChart.width;            oilChart.def_height = oilChart.height;      ngasChart.def_height = ngasChart.height;      coalChart.def_height = coalChart.height;            consum0.def_y = consum1.def_y = consum2.def_y = consum0.y;      avg0.def_y = avg1.def_y = avg2.def_y = avg0.y;            title.def_y = title.y;      subtitle.def_y = subtitle.y;    }        public function preTransitionState():void    {      this.alpha = 1;      line.scaleX = 0;            title.y = title.y + title.height;      subtitle.y = subtitle.y + subtitle.height;            oil_txt.alpha = oil_caption.alpha = 0;      ngas_txt.alpha = ngas_caption.alpha = 0;      coal_txt.alpha = coal_caption.alpha = 0;            sliderLine0.scaleX = sliderLine1.scaleX  = sliderLine2.scaleX = 0;            consum0.y = consum0.def_y + consum0.height;      consum1.y = consum1.def_y + consum1.height;      consum2.y = consum2.def_y + consum2.height;            avg0.y = avg0.def_y + avg0.height;      avg1.y = avg1.def_y + avg1.height;      avg2.y = avg2.def_y + avg2.height;            oilChart.visible = true;      ngasChart.visible = true;      coalChart.visible = true;            oilChart.preTransitionState();      ngasChart.preTransitionState();      coalChart.preTransitionState();            slider0.preTransitionState();      slider1.preTransitionState();      slider2.preTransitionState();    }        public function postTransitionState():void    {      TweenMax.killAll(true, true, true);      hotspot.visible = false;    }        public function firstTransitionIn():void    {      session.pageThreeFirstLoad = false;      preTransitionState();      transitionInComplete();      TweenLite.to(title, 0.4, { y: title.def_y, ease: Back.easeOut, delay: 1} );      TweenLite.to(subtitle, 0.4, { y: subtitle.def_y, ease: Back.easeOut, delay: 2.3 } );      TweenLite.to(oil_txt, 1, { alpha: 1, ease: Expo.easeOut, delay: 3.5, overwrite: true } );      TweenLite.to(ngas_txt, 1, { alpha: 1, ease: Expo.easeOut, delay: 4.25, overwrite: true } );      TweenLite.to(coal_txt, 1, { alpha: 1, ease: Expo.easeOut, delay: 5, overwrite: true } );      TweenLite.to(oilChart, 0, { onStart: oilChart.transitionIn, delay: 5.5, overwrite: true } );      TweenLite.to(ngasChart, 0, { onStart: ngasChart.transitionIn, delay: 6.5, overwrite: true } );      TweenLite.to(coalChart, 0, { onStart: coalChart.transitionIn, delay: 7.5, overwrite: true } );      TweenLite.to(oil_caption, 1.5, { alpha: 1, ease: Expo.easeOut, delay: 6.5, overwrite: true } );      TweenLite.to(ngas_caption, 1.5, { alpha: 1, ease: Expo.easeOut, delay: 7.5, overwrite: true } );      TweenLite.to(coal_caption, 1.5, { alpha: 1, ease: Expo.easeOut, delay: 8.5, overwrite: true } );                  TweenLite.to(consum0, 0.25, { y: consum0.def_y, ease: Expo.easeOut, delay: 9.5, overwrite: true } );      TweenLite.to(consum1, 0.25, { y: consum1.def_y, ease: Expo.easeOut, delay: 9.5, overwrite: true } );       TweenLite.to(consum2, 0.25, { y: consum2.def_y, ease: Expo.easeOut, delay: 9.5, overwrite: true } );            TweenLite.to(sliderLine0, 0.25, { scaleX: 1, delay: 9.25, overwrite: true } );      TweenLite.to(sliderLine1, 0.25, { scaleX: 1, delay: 9.25, overwrite: true } );      TweenLite.to(sliderLine2, 0.25, { scaleX: 1, delay: 9.25, overwrite: true } );            TweenLite.to(slider0, 0, { onStart: slider0.transitionIn, delay: 9.75, overwrite: true } );      TweenLite.to(slider1, 0, { onStart: slider1.transitionIn, delay: 9.75, overwrite: true } );      TweenLite.to(slider2, 0, { onStart: slider2.transitionIn, delay: 9.75, overwrite: true } );            TweenLite.to(this, 0, { onStart: function() { hotspot.visible = false }, delay: 9.75 } );            TweenLite.to(avg0, 0.25, { y: avg0.def_y, ease: Expo.easeOut, delay: 10, overwrite: true } );      TweenLite.to(avg1, 0.25, { y: avg1.def_y, ease: Expo.easeOut, delay: 10, overwrite: true } );       TweenLite.to(avg2, 0.25, { y: avg2.def_y, ease: Expo.easeOut, delay: 10, overwrite: true } );    }        public function transitionIn():void    {      TweenMax.killAll(true, true, true);      oilChart.visible = true;      ngasChart.visible = true;      coalChart.visible = true;      preTransitionState();      transitionInComplete();            TweenLite.to(title, 0.4, { y: title.def_y, ease: Back.easeOut } );      TweenLite.to(subtitle, 0.4, { y: subtitle.def_y, ease: Back.easeOut, delay: 0.25 } );      TweenLite.to(line, 0.00001, { tint: 0x000000, onStart: function() { trace("yeah") } });      TweenLite.to(line, 1, { scaleX: 1, removeTint: true, ease: Expo.easeOut });      TweenLite.to(oil_txt, 1, { alpha: 1, ease: Expo.easeOut, delay: 1, overwrite: true } );      TweenLite.to(ngas_txt, 1, { alpha: 1, ease: Expo.easeOut, delay: 2, overwrite: true } );      TweenLite.to(coal_txt, 1, { alpha: 1, ease: Expo.easeOut, delay: 3, overwrite: true } );            TweenLite.to(sliderLine0, 0.25, { scaleX: 1, delay: 4, overwrite: true } );      TweenLite.to(sliderLine1, 0.25, { scaleX: 1, delay: 4, overwrite: true } );      TweenLite.to(sliderLine2, 0.25, { scaleX: 1, delay: 4, overwrite: true } );            TweenLite.to(consum0, 0.25, { y: consum0.def_y, ease: Expo.easeOut, delay: 4.25, overwrite: true } );      TweenLite.to(consum1, 0.25, { y: consum1.def_y, ease: Expo.easeOut, delay: 4.25, overwrite: true } );       TweenLite.to(consum2, 0.25, { y: consum2.def_y, ease: Expo.easeOut, delay: 4.25, overwrite: true } );            TweenLite.to(slider0, 0, { onStart: slider0.transitionIn, delay: 4.5, overwrite: true } );      TweenLite.to(slider1, 0, { onStart: slider1.transitionIn, delay: 4.5, overwrite: true } );      TweenLite.to(slider2, 0, { onStart: slider2.transitionIn, delay: 4.5, overwrite: true } );            TweenLite.to(avg0, 0.25, { y: avg0.def_y, ease: Expo.easeOut, delay: 4.75, overwrite: true } );      TweenLite.to(avg1, 0.25, { y: avg1.def_y, ease: Expo.easeOut, delay: 4.75, overwrite: true } );      TweenLite.to(avg2, 0.25, { y: avg2.def_y, ease: Expo.easeOut, delay: 4.75, overwrite: true } );            TweenLite.to(oil_caption, 1.5, { alpha: 1, ease: Expo.easeOut, delay: 1, overwrite: true } );      TweenLite.to(ngas_caption, 1.5, { alpha: 1, ease: Expo.easeOut, delay: 2, overwrite: true } );      TweenLite.to(coal_caption, 1.5, { alpha: 1, ease: Expo.easeOut, delay: 3, overwrite: true } );      TweenLite.to(oilChart, 0, { onStart: oilChart.transitionIn, delay: 1, overwrite: true } );      TweenLite.to(ngasChart, 0, { onStart: ngasChart.transitionIn, delay: 2, overwrite: true } );      TweenLite.to(coalChart, 0, { onStart: coalChart.transitionIn, delay: 3, overwrite: true } );    }        public function transitionOut():void     {      session.lockNavigation();      TweenLite.to(this, 0.5, { alpha: 0, ease: Expo.easeOut, onComplete: transitionOutComplete } );          }        public function transitionInComplete():void    {      session.unlockNavigation();    }        public function transitionOutComplete():void    {      TweenMax.killAll(true, true, true);      session.updateView();      parent.removeChild(this);    }        public function updateOilChart(event:Event = null):void    {      var w:Number;      var h:Number;      switch (oilConsum.consumption)      {        case -2:          w = h = 1.64;          oil_caption.text = "123 years left";          break;        case -1:          w = h = 1.15;          oil_caption.text = "61 years left";          break;        case 0:          w = h = 1;          oil_caption.text = "46 years left";          break;        case 1:          w = h = 0.91;          oil_caption.text = "38 years left";          break;        case 2:          w = h = 0.83;          oil_caption.text = "32 years left";          break;        case 3:          w = h = 0.79;          oil_caption.text = "29 years left";          break;        case 4:          w = h = 0.76;          oil_caption.text = "27 years left";          break;      }            TweenLite.to(oilChart, 0.5, { width: oilChart.def_width * w, height: oilChart.def_height * h, ease: Expo.easeOut });    }        public function updateNgasChart(event:Event = null):void    {      var w:Number;      var h:Number;      switch (ngasConsum.consumption)      {        case -2:          w = h = 1.66;          ngas_caption.text = "200+ years left";          break;        case -1:          w = h = 1.26;          ngas_caption.text = "99 years left";          break;        case 0:          w = h = 1;          ngas_caption.text = "63 years left";          break;        case 1:          w = h = 0.88;          ngas_caption.text = "49 years left";          break;        case 2:          w = h = 0.82;          ngas_caption.text = "42 years left";          break;        case 3:          w = h = 0.75;          ngas_caption.text = "35 years left";          break;        case 4:          w = h = 0.73;          ngas_caption.text = "33 years left";          break;      }            TweenLite.to(ngasChart, 0.5,      {         width: ngasChart.def_width * w, height: ngasChart.def_height * h,         roundProps:["x","y", "width", "height"],         ease: Expo.easeOut       });    }    public function updateCoalChart(event:Event = null):void    {      var w:Number;      var h:Number;      switch (coalConsum.consumption)      {        case -1:          w = h = 1.2;          coal_caption.text = "200+ years left";          break;        case 0:          w = h = 1;          coal_caption.text = "119 years left";          break;        case 1:          w = h = 0.81;          coal_caption.text = "78 years left";          break;        case 2:          w = h = 0.72;          coal_caption.text = "61 years left";          break;        case 3:          w = h = 0.65;          coal_caption.text = "51 years left";          break;        case 4:          w = h = 0.62;          coal_caption.text = "44 years left";          break;        case 5:          w = h = 0.59; // 0.57          coal_caption.text = "39 years left";          break;      }            TweenLite.to(coalChart, 0.5, { width: coalChart.def_width * w, height: coalChart.def_height * h, ease: Expo.easeOut });    }  }}