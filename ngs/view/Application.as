package ngs.view{  import flash.display.MovieClip;  import flash.events.Event;  import flash.events.MouseEvent;  import com.greensock.TweenLite;  import com.greensock.plugins.TweenPlugin;  import com.greensock.plugins.AutoAlphaPlugin;   import com.greensock.easing.*;  import net.phrologue.utils.MouseEvents;  import ngs.model.Session;  import ngs.model.MainNgasConsum;  import ngs.model.NgasConsum;  import ngs.model.OilConsum;  import ngs.model.CoalConsum;  import ngs.view.PageOne;  import ngs.view.PageTwo;  import ngs.view.PageThree;  import ngs.controller.Navigator;    public class Application extends MovieClip  {    public var session:Session;    public var navigator:Navigator;        public var mainNgasConsum:MainNgasConsum;    public var ngasConsum:NgasConsum;    public var oilConsum:OilConsum;    public var coalConsum:CoalConsum;        public var pageOne:PageOne;    public var pageTwo:PageTwo;    public var pageThree:PageThree;      public var nav_btnList:Array;        public function Application()    {      TweenPlugin.activate([AutoAlphaPlugin]);      init();    }        public function init():void    {      session = new Session();      navigator = new Navigator();            mainNgasConsum = new MainNgasConsum();      ngasConsum = new NgasConsum();      oilConsum = new OilConsum();      coalConsum = new CoalConsum();            pageOne = new PageOne();      pageTwo = new PageTwo();      pageThree = new PageThree();      pageOne.mainNgasConsum = mainNgasConsum;      pageOne.session = session;      pageTwo.session = session;      pageThree.ngasConsum = ngasConsum;      pageThree.oilConsum = oilConsum;      pageThree.coalConsum = coalConsum;      pageThree.session = session;      navigator.session = session;      nav_btnList = [ navigation.nav_btn0, navigation.nav_btn1, navigation.nav_btn2 ];            for (var i:* in nav_btnList)      {        nav_btnList[i].target = i;        navigator.section(nav_btnList[i]);      }      session.addEventListener(Session.LOCK_NAVIGATION, lockNavigation);      session.addEventListener(Session.UNLOCK_NAVIGATION, unlockNavigation);      session.addEventListener(Session.INDEX_UPDATED, indexUpdated);      session.addEventListener(Session.UPDATE_VIEW, updateView);            lockNavigation();      transitionIn();    }        public function showPage(index:Number):void    {      switch(index)      {        case 0:          session.pageOneFirstLoad ? pageOne.firstTransitionIn() : pageOne.transitionIn();           session.currentIndexPage = pageOne;          session.currentIndex = 0;          addChild(pageOne);          break;        case 1:           pageTwo.transitionIn();          session.currentIndexPage = pageTwo;          session.currentIndex = 1;          addChild(pageTwo);        case 2:          session.pageThreeFirstLoad ? pageThree.firstTransitionIn() : pageThree.transitionIn();          session.currentIndexPage = pageThree;          session.currentIndex = 2;          addChild(pageThree);          break;      }    }        public function transitionIn():void    {      line0.scaleX = 0;      TweenLite.to(line0, 0.00001, { tint: 0x000000 });      TweenLite.to(line0, 1, { scaleX: 1, removeTint: true, ease: Expo.easeOut });            line1.scaleX = 0;      footer.alpha = 0;      TweenLite.to(line1, 0.00001, { tint: 0x000000 });      TweenLite.to(line1, 1, { scaleX: 1, removeTint: true, ease: Expo.easeOut, delay: 7 })      TweenLite.to(footer, 1, { alpha: 1, ease: Expo.easeOut, delay: 7.2 } );            line2.alpha = 0;      TweenLite.to(line2, 0.00001, { scaleX: 0, tint: 0x000000, alpha: 1 });      TweenLite.to(line2, 1, { scaleX: 1, removeTint: true, ease: Expo.easeOut, delay: 0.2 });            gelogo.alpha = 0;      TweenLite.to(gelogo, 0.5, { alpha: 1, ease: Expo.easeOut, delay: 7.3 });            for (var i:* in nav_btnList)      {        nav_btnList[i].y = nav_btnList[i].height;            // delay 3.5, 7.4        TweenLite.to(nav_btnList[i], 0.3, { y: 0, ease: Back.easeOut, delay: 7.4 + (i * 0.1), onComplete: unlockNavigation } );      }            transitionInComplete();    }        public function transitionInComplete():void    {      session.updateView();    }        public function lockNavigation(event:Event = null):void  { MouseEvents.lock(navigation); }        public function unlockNavigation(event:Event = null):void { MouseEvents.unlock(navigation); }        public function indexUpdated(event:Event = null):void     {       session.currentIndexPage.transitionOut();     }        public function postTransitionState():void    {      for (var i:* in nav_btnList)      {        TweenLite.to(nav_btnList[i], 0.3, { y: 0, ease: Back.easeOut, delay: 0 + (i * 0.1), onComplete: unlockNavigation } );      }            TweenLite.to(line1, 0.001, { scaleX: 1, removeTint: true, ease: Expo.easeOut })      gelogo.alpha = 1;      footer.alpha = 1;    }        public function updateView(event:Event = null):void    {      showPage(session.destinationIndex);      swapSource();            for (var i:* in nav_btnList)      {        if (session.currentIndex == i)        {            nav_btnList[i].lock();        }        else        {          nav_btnList[i].unlock();        }      }    }        public function swapSource():void    {      TweenLite.to(footer, 0.0001, { tint: 0x989998 } );      TweenLite.to(footer, 0.25, { removeTint: true, ease: Expo.easeOut, delay: 0.4 } );            switch (session.currentIndex)      {        case 0:          TweenLite.to(footer, 0.5, { y: 555, ease: Expo.easeOut } );          break;        case 1:          TweenLite.to(footer, 0.5, { y: 543, ease: Expo.easeOut  } );          break;        case 2:          TweenLite.to(footer, 0.5, { y: 555, ease: Expo.easeOut  } );          break;      }    }  }}