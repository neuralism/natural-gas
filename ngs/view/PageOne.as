package ngs.view{  import flash.display.MovieClip;  import flash.events.MouseEvent;  import flash.events.Event;  import flash.geom.Point;  import com.greensock.TweenMax;  import com.greensock.plugins.TweenPlugin;  import com.greensock.plugins.TransformAroundPointPlugin;  import com.greensock.plugins.RemoveTintPlugin;  import com.greensock.plugins.RoundPropsPlugin;  import com.greensock.TweenLite;  import com.greensock.easing.*;  import ngs.model.Session;  import ngs.model.MainNgasConsum;  import ngs.controller.Navigator;  import ngs.view.FlickSwitch;  import com.greensock.TimelineMax;  public class PageOne extends MovieClip  {    private var _session:Session;    public var mainNgasConsum:MainNgasConsum;    public var navigator:Navigator;        public var animateIn:TimelineMax = new TimelineMax({ paused: true });    public var animateFirstIn:TimelineMax = new TimelineMax({ paused: true });    public function PageOne()    {      TweenPlugin.activate([RoundPropsPlugin, RemoveTintPlugin, TransformAroundPointPlugin]);    }        public function set session(m:*):void    {      _session = m;      register();      init();    }        public function get session():Session    {      return _session;    }        private function register():void    {      info0.txt.def_y = info0.txt.y;      info0.txt.y = info0.txt.height * 2;            info1.txt.def_y = info1.txt.y;      info1.txt.y = info1.txt.height * 2;            title.def_y = title.y;      subtitle.def_y = subtitle.y;            userIncrease.alpha = 0;      averageIncrease.alpha = 0;            ngasChart.def_width = ngasChart.width;      ngasChart.def_height = ngasChart.height;    }        public function init():void    {      hotspot.visible = false;      navigator = new Navigator();      slider.session = session;      slider.model = mainNgasConsum;      flickSwitch.session = session;            ngasChart.enableLabels();            mainNgasConsum.addEventListener(MainNgasConsum.VALUE, updateNgasChart);            flickSwitch.dispatcher.addEventListener(FlickSwitch.SHOW_AMOUNT_LEFT, showAmountLeft);      flickSwitch.dispatcher.addEventListener(FlickSwitch.SHOW_YEARS_LEFT, showYearsLeft);            hotspot.addEventListener(MouseEvent.CLICK, handler);            function handler(event:MouseEvent):void      {        ngasChart.postTransitionState();        postTransitionState();      }            ngasChart.addEventListener(MouseEvent.CLICK, gotoGasGiants);      ngasChart.buttonMode = true;      avgInc_btn.addEventListener(MouseEvent.CLICK, resetSlider);      avgInc_btn.addEventListener(MouseEvent.ROLL_OVER, resetSlider);      avgInc_btn.addEventListener(MouseEvent.ROLL_OUT, resetSlider);      avgInc_btn.buttonMode = true;            function gotoGasGiants(event:MouseEvent):void      {        session.lockNavigation();        session.destinationIndex = 1;      }            function resetSlider(event:MouseEvent):void      {        switch (event.type)        {          case MouseEvent.CLICK:            slider.checkLocation(70);            break;          case MouseEvent.ROLL_OVER:            TweenLite.to(info1, 0.25, { tint: 0x333333, ease: Expo.easeOut } );            break          case MouseEvent.ROLL_OUT:            TweenLite.to(info1, 0.25, { removeTint: true, ease: Expo.easeOut } );            break        }      }            animateFirstIn.insertMultiple      ([          TweenLite.to(this, 0, { onComplete: transitionInComplete } ),        TweenLite.to(this, 0, { onComplete: function() { hotspot.visible = true }, delay: 7.5 } ),         TweenLite.to(title, 0.4, { y: title.def_y, ease: Back.easeOut, delay: 1 } ),        TweenLite.to(subtitle, 0.4, { y: subtitle.def_y, ease: Back.easeOut, delay: 2.3 } ),        TweenLite.to(ngasChart, 0, { onStart: ngasChart.transitionIn, delay: 3.5 }),        TweenLite.to(ngasChart_info, 1.5, { alpha: 1, ease: Expo.easeOut, delay: 5 } ),        TweenLite.to(cm_info, 1, { alpha: 1, ease: Expo.easeOut, delay: 6 } ),        TweenLite.to(cm_box, 0.5, { scaleY: 1, scaleX: 1, ease: Back.easeOut, delay: 6.2 } ),        TweenLite.to(flickSwitch, 1, { alpha: 1, ease: Expo.easeOut, delay: 7.5, onStart: function(){ hotspot.visible = false } } )      ]);    }        public function preTransitionState():void    {      this.alpha = 1;      avgInc_btn.visible = false;      title.y = title.y + title.height;      subtitle.y = subtitle.y + subtitle.height;      ngasChart_info.alpha = 0;      ngasChart.visible = false;      cm_info.alpha = 0;      cm_box.scaleX = cm_box.scaleY = 0;      flickSwitch.alpha = 0;      sliderBox.alpha = 0;      info0.txt.y = info0.txt.height * 2;    }        public function firstTransitionIn():void    {      hotspot.visible = true;      session.pageOneFirstLoad = false;      preTransitionState();      animateFirstIn.restart();    }        public function transitionIn():void    {      preTransitionState();            TweenLite.to(this, 0, { onComplete: transitionInComplete, delay: 1 } ),      TweenLite.to(title, 0.4, { y: title.def_y, ease: Back.easeOut } ),      TweenLite.to(subtitle, 0.4, { y: subtitle.def_y, ease: Back.easeOut, delay: 0.25 } ),      TweenLite.to(ngasChart, 0, { onStart: ngasChart.transitionIn, delay: 0.5 }),      TweenLite.to(ngasChart_info, 1.5, { alpha: 1, ease: Expo.easeOut, delay: 0.7 } ),      TweenLite.to(cm_info, 0.4, { alpha: 1, ease: Expo.easeOut, delay: 1.2 } ),      TweenLite.to(cm_box, 0.4, { scaleY: 1, scaleX: 1, ease: Back.easeOut, delay: 1.4 } ),      TweenLite.to(flickSwitch, 1, { alpha: 1, ease: Expo.easeOut, delay: 0.7 } )      if (session.pageOneIndex == 1)       {         avgInc_btn.visible = true;        info0.txt.y = info0.txt.height * 2;        info1.txt.y = info1.txt.height * 2;        averageIncrease.alpha = 0;        slider.preTransitionState();        TweenLite.to(sliderBox, 0.5, { alpha: 1, ease: Expo.easeOut, delay: 1.6 } );        TweenLite.to(info0.txt, 0.5, { y: info0.txt.def_y, ease: Expo.easeOut, delay: 1.6, overwrite: false });        TweenLite.to(info1.txt, 0.5, { y: info1.txt.def_y, ease: Expo.easeOut, delay: 1.6, overwrite: false});        TweenLite.to(userIncrease, 0.5, { alpha: 1, ease: Expo.easeOut, delay: 2.5, overwrite: true });        TweenLite.to(averageIncrease, 0.5, { alpha: 1, ease: Expo.easeOut, delay: 2.5, overwrite: true });        TweenLite.to(slider, 0, { onStart: slider.transitionIn, delay: 2 } );      }            animateIn.restart();      transitionInComplete();    }    public function transitionOut():void     {      session.lockNavigation();      TweenLite.to(this, 0.5, { alpha: 0, ease: Expo.easeOut, onComplete: transitionOutComplete } );    }            public function postTransitionState():void    {      Object(parent).postTransitionState();      avgInc_btn.visible = true;      hotspot.visible = false;      animateIn.stop();      animateFirstIn.stop();      this.alpha = 1;      title.y = title.def_y;      subtitle.y = subtitle.def_y;      ngasChart_info.alpha = 1;      ngasChart.visible = true;      cm_info.alpha = 1;      cm_box.scaleX = cm_box.scaleY = 1;      flickSwitch.alpha = 1;      sliderBox.alpha = 0;      transitionInComplete();    }        public function transitionInComplete():void    {      hotspot.visible = false;      session.unlockNavigation();    }        public function transitionOutComplete():void    {      session.updateView();      parent.removeChild(this);    }        public function updateNgasChart(event:Event = null):void    {      var speed:Number = 0.5;      var w:Number;      var h:Number;            switch (mainNgasConsum.consumption)      {        case -2:          ngasChart.sharpen();          w = h = 1.29;          userIncrease.text = "-3%";          ngasChart_info.txt.yearsLeft.text = "200+ years left";          break;        case -1:          w = h = 1.26; // 1.26          ngasChart.sharpen();          userIncrease.text = "-2%";          ngasChart_info.txt.yearsLeft.text = "99 years left";          break;        case 0:          w = h = 1;          ngasChart.sharpen();          userIncrease.text = "-1%";          ngasChart_info.txt.yearsLeft.text = "63 years left";          break;        case 1:          w = h = 0.88;          ngasChart.sharpen();          userIncrease.text = "0%";          ngasChart_info.txt.yearsLeft.text = "49 years left";          break;        case 2:          w = h = 0.82;          ngasChart.sharpen();          userIncrease.text = "-1%";          ngasChart_info.txt.yearsLeft.text = "42 years left";          break;        case 3:          w = h = 0.75;          ngasChart.sharpen();          userIncrease.text = "-2%";          ngasChart_info.txt.yearsLeft.text = "35 years left";              break;        case 4:          w = h = 0.73;          ngasChart.sharpen();          userIncrease.text = "3%";          ngasChart_info.txt.yearsLeft.text = "33 years left";          break;      }                  TweenLite.to(ngasChart, speed,       {          width: ngasChart.def_width * w, height: ngasChart.def_height * h,        roundProps: ["x", "y", "width", "height"],         ease: Expo.easeOut      });    }        public function showAmountLeft(event:Event = null):void    {      if (session.pageOneIndex != 0)      {        session.pageOneIndex = 0;        TweenLite.to(ngasChart, 0.5, { width: ngasChart.def_width, height: ngasChart.def_height, ease: Expo.easeOut  });        slider.transitionOut();        hideYearsLeft();        ngasChart.unlockCountries();      }    }        public function hideAmountLeft(event:Event = null):void    {          }        public function showYearsLeft(event:Event = null):void    {      if (session.pageOneIndex != 1)      {        session.pageOneIndex = 1;        updateNgasChart();        slider.transitionIn();        hideAmountLeft();        info0.txt.y = info0.txt.height * 2;        info1.txt.y = info1.txt.height * 2;        TweenLite.to(sliderBox, 0.5, { alpha: 1, scaleX: 1, scaleY: 1, ease: Expo.easeOut } );        TweenLite.to(ngasChart_info.txt, 0.5, { y: "-25", ease: Expo.easeOut });        TweenLite.to(info0.txt, 0.5, { y: info0.txt.def_y, ease: Expo.easeOut, delay: 0, overwrite: false });        TweenLite.to(info1.txt, 0.5, { y: info1.txt.def_y, ease: Expo.easeOut, delay: 0, overwrite: false});        TweenLite.to(userIncrease, 0.5, { alpha: 1, ease: Expo.easeOut, delay: 0.5, overwrite: true });        TweenLite.to(averageIncrease, 0.5, { alpha: 1, ease: Expo.easeOut, delay: 0.5, overwrite: true });        avgInc_btn.visible = true;        ngasChart.lockCountries();      }          }        public function hideYearsLeft(evet:Event = null):void    {      slider.transitionOut();      avgInc_btn.visible = false;      TweenLite.to(sliderBox, 0.5, { alpha: 0, scaleX: 0.9, scaleY: 0.9, ease: Expo.easeOut } );      TweenLite.to(ngasChart_info.txt, 0.5, { y: 0, ease: Expo.easeOut });      TweenLite.to(info0.txt, 0.5, { y: info0.txt.height * 2, ease: Expo.easeIn, delay: 0, overwrite: false });      TweenLite.to(info1.txt, 0.5, { y: info1.txt.height * 2, ease: Expo.easeIn, delay: 0, overwrite: false });      TweenLite.to(userIncrease, 0.25, { alpha: 0, ease: Expo.easeOut, delay: 0, overwrite: true });      TweenLite.to(averageIncrease, 0.25, { alpha: 0, ease: Expo.easeOut, delay: 0, overwrite: true });    }  }}