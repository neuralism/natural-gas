package ngs.view{  import flash.display.MovieClip;  import flash.events.MouseEvent;  import flash.events.Event;  import flash.geom.Point;  import com.greensock.*;   import com.greensock.easing.*;  import com.greensock.plugins.*;  import ngs.model.Session;    public class GasGiantsTreemap extends MovieClip  {    public var session:Session = new Session();        public var usa:USA = new USA();    public var russia:Russia = new Russia();    public var canada:Canada = new Canada();    public var iran:Iran = new Iran();    public var qatar:Qatar = new Qatar();    public var saudi:Saudi = new Saudi();    public var uae:UAE = new UAE();    public var japan:Japan = new Japan();    public var china:China = new China();    public var norway:Norway = new Norway();    public var turkmenistan:Turkmenistan = new Turkmenistan();    public var uk:UK = new UK();        public var countryList:Array = [ usa, russia, canada, iran, qatar, saudi, uae, japan, china, norway, turkmenistan, uk ];        public var zeroList:Array = [ iran, qatar, russia, saudi, usa, uae, turkmenistan ];    public var zeroRef:Array =    [        [ 0,   0,  220, 250, 0x6db9e8, "15.8% Iran" ],       [ 221, 0,   191, 250, 0x6db9e8, "13.5% Qatar " ],       [ 413, 0,   316, 264, 0x21a8e1, "23.7% Russian Federation" ],       [ 0,   251, 151, 106, 0x92c7ed, "4.2% Saudi Arabia" ],       [ 152, 251, 138, 106, 0xbcdaf4, "3.7% USA" ],      [ 291, 251, 121, 106, 0xbcdaf4, "3.4% UAE" ],       [ 413, 265, 182, 92,  0x92c7ed, "4.9% Turkmenistan" ]    ]        public var oneList:Array = [ usa, russia, canada, norway, china, qatar ];    public var oneRef:Array =     [       [ 0,   0,   313, 226, 0x21a8e1, "20.1% USA" ],      [ 314, 0,   222, 281, 0x6db9e8, "17.6% Russian Federation" ],      [ 0,   227, 146, 128, 0x6db9e8, "5.4% Canada" ],      [ 147, 227, 95,  128, 0x92c7ed, "3.5% Norway" ],      [ 243, 227, 70,  128, 0xbcdaf4, "2.8% China" ],      [ 314, 282, 142, 73,  0xa2cff0, "3.0% Qatar" ]    ]        public var twoList:Array = [ usa, russia, canada, japan, china, iran, uk ];    public var twoRef:Array =    [      [ 0,   0,   314, 248, 0x21a8e1, "22.2% USA" ],      [ 315, 0,   222, 216, 0x6db9e8, "13.2% Russian Federation" ],      [ 0,   249, 108, 106, 0x92c7ed, "3.2% Canada" ],      [ 109, 249, 102, 106, 0xa2cff0, "3.0% Japan" ],      [ 212, 249, 102, 106, 0xa2cff0, "3.0% China" ],      [ 315, 217, 222, 70,  0x6db9e8, "4.5% Iran" ],      [ 315, 288, 157, 67,  0xbcdaf4, "2.9% UK" ]    ]        public function GasGiantsTreemap()    {      TweenPlugin.activate      ([        TransformAroundPointPlugin,         TransformAroundCenterPlugin,         ScrollRectPlugin,        TintPlugin,        RemoveTintPlugin,         AutoAlphaPlugin,         TintPlugin      ]);            init();    }        public function init():void    {            for(var i:int = 0; i < 3; i++)      {        var curObj:Object = nav.getChildByName("btn" + i);                curObj.buttonMode = true;        curObj.destination = i;        curObj.addEventListener(MouseEvent.CLICK, handler);        curObj.addEventListener(MouseEvent.ROLL_OVER, handler);        curObj.addEventListener(MouseEvent.ROLL_OUT, handler);      }            next_btn.addEventListener(MouseEvent.CLICK, slideHandler);      next_btn.addEventListener(MouseEvent.ROLL_OVER, slideHandler);      next_btn.addEventListener(MouseEvent.ROLL_OUT, slideHandler);      next_btn.buttonMode = true;            prev_btn.addEventListener(MouseEvent.CLICK, slideHandler);      prev_btn.addEventListener(MouseEvent.ROLL_OVER, slideHandler);      prev_btn.addEventListener(MouseEvent.ROLL_OUT, slideHandler);      prev_btn.buttonMode = true;            treemap_hitArea.alpha = 0;      treemap_hitArea.addEventListener(MouseEvent.CLICK, handler);      treemap_hitArea.buttonMode = true;      treemap_hitArea.destination = 1;            session.addEventListener(Session.UPDATE_PAGE_TWO, updatePageTwo);            function slideHandler(event:MouseEvent):void      {        switch (event.type)        {          case MouseEvent.CLICK:            session.updatePageTwo(event.currentTarget.destination);            break;                    case MouseEvent.ROLL_OVER:            TweenLite.to(event.currentTarget, 0.25, { tint: 0x333333, ease: Expo.easeOut, overwrite: true } );            break;                    case MouseEvent.ROLL_OUT:            TweenLite.to(event.currentTarget, 0.25, { removeTint: true, ease: Expo.easeOut, overwrite: true } );            break;                  }      }            function handler(event:MouseEvent):void      {        switch (event.type)        {          case MouseEvent.CLICK:            nav.btn0.selected = nav.btn1.selected = nav.btn2.selected = false;            event.currentTarget.selected = true;            session.updatePageTwo(event.currentTarget.destination);            break;          case MouseEvent.ROLL_OVER:            if (!event.currentTarget.selected)            TweenLite.to(event.currentTarget, 0.25, { tint: 0x333333, ease: Expo.easeOut } );            break;          case MouseEvent.ROLL_OUT:              if (!event.currentTarget.selected)              TweenLite.to(event.currentTarget, 0.25, { removeTint: true, ease: Expo.easeOut } );            break;        }              }            for each (var country:* in countryList)      {        country.visible = false;        addChild(country);      }            this.setChildIndex(treemap_hitArea, numChildren - 1);            for (var n:* in zeroList)      {        zeroList[n].rx = zeroRef[n][0];        zeroList[n].ry = zeroRef[n][1];        zeroList[n].rw = zeroRef[n][2];        zeroList[n].rh = zeroRef[n][3];        zeroList[n].rc = zeroRef[n][4];        zeroList[n].rp = zeroRef[n][5];      }            for (var k:* in oneList)      {        oneList[k].px = oneRef[k][0];        oneList[k].py = oneRef[k][1];        oneList[k].pw = oneRef[k][2];        oneList[k].ph = oneRef[k][3];        oneList[k].pc = oneRef[k][4];        oneList[k].pp = oneRef[k][5]      }      for (var m:* in twoList)      {        twoList[m].cx = twoRef[m][0];        twoList[m].cy = twoRef[m][1];        twoList[m].cw = twoRef[m][2];        twoList[m].ch = twoRef[m][3];        twoList[m].cc = twoRef[m][4];        twoList[m].cp = twoRef[m][5];      }    }        public function updatePageTwo(event:Event = null):void    {      var cur:Number = session.pageTwoIndex;      var des:Number = session.pageTwoDestination;      var curBtn:Object = nav.getChildByName("btn" + des);            nav.btn0.mouseChildren = nav.btn0.mouseEnabled = true;      nav.btn1.mouseChildren = nav.btn1.mouseEnabled = true;      nav.btn2.mouseChildren = nav.btn2.mouseEnabled = true;            curBtn.mouseChildren = curBtn.mouseEnabled = false;            TweenLite.to(nav.btn0, 0.0001, { removeTint: true, overwrite: true });      TweenLite.to(nav.btn1, 0.0001, { removeTint: true, overwrite: true });      TweenLite.to(nav.btn2, 0.0001, { removeTint: true, overwrite: true });            if (des == 0)      {                TweenLite.to(nav.btn0, 0.2, { tint: 0x2EA8DC, overwrite: true });        next_btn.visible = true;        prev_btn.visible = false;        prev_btn.destination = null;        next_btn.destination = 1;        treemap_hitArea.destination = 1;      }            if (des == 1)      {        TweenLite.to(nav.btn1, 0.2, { tint: 0x2EA8DC, overwrite: true });        next_btn.visible = true;        prev_btn.visible = true;        prev_btn.destination = 0;        next_btn.destination = 2;        treemap_hitArea.destination = 2;      }            if (des == 2)      {        TweenLite.to(nav.btn2, 0.2, { tint: 0x2EA8DC, overwrite: true });        next_btn.visible = false;        prev_btn.visible = true;        prev_btn.destination = 1;        next_btn.destination = null;        treemap_hitArea.destination = 0;      }            if (cur == 0 && des == 1) permu_zero_one();      if (cur == 0 && des == 2) permu_zero_two();      if (cur == 1 && des == 0) permu_one_zero();      if (cur == 1 && des == 2) permu_one_two();      if (cur == 2 && des == 0) permu_two_zero();      if (cur == 2 && des == 1) permu_two_one();    }        public function custrans(target:Object, speed:Number, x:*, y:*, width:*, height:*, colour:*, string:*, ease:* = null, delay:* = 0, func:* = null):void    {      TweenLite.to(target, speed, { x: parse(x), y: parse(y), scrollRect: { width: parse(width), height: parse(height) }, ease: ease, delay: delay, onComplete: func, overwrite: true } );      TweenLite.to(target.bg, 2, { tint: parse(colour), ease: ease, overwrite: true } );            if (string != "noChange")      {        target.txt.text = parse(string);      }            function parse(input:*):*      {        if (input is Number)        {          return input;        }        else if (input == "noChange")        {          return null;        }        else        {          return target[input];        }      }    }        public function ascend(list:Array):void    {      trace(this.numChildren);      for each (var item:* in list)      {        this.setChildIndex(item, this.numChildren - 1)      }            this.setChildIndex(treemap_hitArea, numChildren - 1);    }        public function transitionIn():void    {      var cur:Number = session.pageTwoIndex;      var curList:Array = [];      var pre:String;            this.visible = true;            nav.btn0.mouseChildren = nav.btn0.mouseEnabled = true;      nav.btn1.mouseChildren = nav.btn1.mouseEnabled = true;      nav.btn2.mouseChildren = nav.btn2.mouseEnabled = true;            if (cur == 0)       {        curList = zeroList;        pre = "r";        nav.btn0.mouseChildren = nav.btn0.mouseEnabled = false;        prev_btn.destination = null;        next_btn.destination = 1;        next_btn.visible = true;        prev_btn.visible = false;                TweenLite.to(nav.btn0, 0, { tint: 0x2EA8DC });      }              if (cur == 1)       {        curList = oneList;        pre = "p";        nav.btn1.mouseChildren = nav.btn1.mouseEnabled = false;        prev_btn.destination = 0;        next_btn.destination = 2;        next_btn.visible = true;        prev_btn.visible = true;        TweenLite.to(nav.btn1, 0, { tint: 0x2EA8DC });      }      if (cur == 2)       {        curList = twoList;        pre = "c";        nav.btn2.mouseChildren = nav.btn2.mouseEnabled = false;        prev_btn.destination = 1;        next_btn.destination = null;        next_btn.visible = false;        prev_btn.visible = true;        TweenLite.to(nav.btn2, 0, { tint: 0x2EA8DC });      }            for each (var country:* in countryList)      {        country.visible = false;      }                  for (var i:* in curList)      {        var obj:Object = curList[i];        custrans(obj,   0, pre+"x", pre+"y", 0, 0, pre+"c", pre+"p", Expo.easeOut);        custrans(obj,   0.5, pre+"x", pre+"y", pre+"w", pre+"h", pre+"c", pre+"p", Expo.easeOut, i * 0.1);        obj.visible = true;      }    }            public function permu_zero_one():void    {      session.pageTwoIndex = 1;            var speed:Number = 1.25;      var ease:* = Quint.easeOut;            for each (var country:* in oneList)      {        country.visible = true;      }            custrans(canada, 0, "px", "py", 0, 0, "pc", "pp", ease);      custrans(norway, 0, "px", "py", 0, 0, "pc", "pp", ease);      custrans(china,  0, "px", "py", 0, 0, "pc", "pp", ease);      custrans(iran, 0.3, "rw", "ry", 0, "rh", "rc", "noChange", Quint.easeIn);      custrans(saudi,  0.4, 151, "ry", 0, "rh", "rc", "noChange", Quint.easeIn);      custrans(uae, 0.4, "rx", "ry", "rw", 0, "rc", "noChange", Quint.easeIn);      custrans(turkmenistan, 0.3, "rx", "ry", 0, "rh", "rc", "noChange", Quint.easeIn);      ascend([usa, russia, qatar]);          custrans(usa, speed, "px", "py", "pw", "ph", "pc", "pp", ease);      custrans(russia, speed, "px", "py", "pw", "ph", "pc", "pp", ease, 0.015);      custrans(qatar, speed, "px", "py", "pw", "ph", "pc", "pp", ease, 0.03);      custrans(canada, 0.5, "px", "py", "pw", "ph", "pc", "pp", ease, 0.3);      custrans(norway, 0.5, "px", "py", "pw", "ph", "pc", "pp", ease, 0.3);      custrans(china, 0.5, "px", "py", "pw", "ph", "pc", "pp", ease, 0.4)            unlockNavigation();    }        public function permu_zero_two():void    {      session.pageTwoIndex = 2;            var speed:Number = 1;      var ease:* = Expo.easeOut;            for each (var country:* in twoList)      {        country.visible = true;      }            custrans(canada, 0, "cx", "cy", 0, 0, "cc", "cp");      custrans(japan, 0, "cx", "cy", 0, 0, "cc", "cp");      custrans(china, 0, "cx", "cy", 0, 0, "cc", "cp");      custrans(uk, 0, "cx", "cy", 0, 0, "cc", "cp");            custrans(qatar, speed, "rx", "ry", 0, 0, "rc", "noChange", ease);      custrans(saudi, speed, "rx", "ry", 0, 0, "rc", "noChange", ease);      custrans(uae, speed, "rx", "ry", 0, 0, "rc", "noChange", ease);      custrans(turkmenistan, speed, "rx", "ry", 0, 0, "rc", "noChange", ease);            ascend([usa, russia, iran]);            custrans(usa, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease);      custrans(russia, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease);      custrans(iran, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease)      custrans(canada, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease);      custrans(japan, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease);      custrans(china, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease);      custrans(uk, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease);            unlockNavigation();    }        public function permu_one_zero():void    {      session.pageTwoIndex = 0;            var speed:Number = 1;      var ease:* = Quint.easeOut;            for each (var country:* in zeroList)      {        country.visible = true;      }            custrans(iran, 0, "rx", "ry", 0, 0, "rc", "rp", ease);      custrans(saudi, 0, "rx", "ry", 0, 0, "rc", "rp", ease);      custrans(uae, 0, "rx", "ry", 0, 0, "rc", "rp", ease);      custrans(turkmenistan, 0, "rx", "ry", 0, 0, "rc", "rp", ease);      custrans(canada, 0.5, "px", "py", 0, "noChange", "pc", "noChange", Quint.easeIn, 0);      custrans(norway, 0.25, "px", "py", "noChange", 0, "pc", "noChange", Quint.easeIn, 0.1);      custrans(china, 0.25, "px", "py", 0, 0, "pc", "noChange", Quint.easeIn, 0.2);            ascend([usa, russia, qatar]);      custrans(usa, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease, 0.1);      custrans(russia, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease, 0.1);      custrans(qatar, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease, 0.1);      custrans(iran, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease, 0.2);      custrans(saudi, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease, 0.2);      custrans(uae, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease, 0.2);      custrans(turkmenistan, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease, 0.2);            unlockNavigation();    }        public function permu_one_two():void    {      session.pageTwoIndex = 2;            var speed:Number = 0.75;      var ease:* = Expo.easeOut;            for each (var country:* in twoList)      {        country.visible = true;      }            custrans(iran, 0, "cx", "cy", 0, "ch", "cc", "cp", ease);      custrans(japan, 0, "cx", "cy", 0, "ch", "cc", "cp", ease);      custrans(uk, 0, "cx", "cy", "cw", 0, "cc", "cp", ease);      custrans(norway, 0.5, norway.px + norway.pw, "py", 0, "noChange", "pc", "noChange", ease);      custrans(qatar, 0.25, "px", "py", "noChange", 0, "pc", "noChange", ease);      ascend([usa, russia, canada, china]);      custrans(usa, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease, 0.1);      custrans(russia, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease, 0.05);      custrans(canada, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease, 0.1)      custrans(china, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease, 0.1);      custrans(iran, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease, 0.25);      custrans(japan, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease, 0.1);      custrans(uk, speed, "cx", "cy", "cw", "ch", "cc", "cp", ease, 0.2);            unlockNavigation();    }        public function permu_two_zero():void    {      session.pageTwoIndex = 0;            var speed:Number = 1;      var ease:* = Expo.easeOut;            for each (var country:* in zeroList)      {        country.visible = true;      }            custrans(iran, 0, "rx", "ry", 0, 0, "rc", "rp", ease);      custrans(saudi, 0, "rx", "ry", 0, 0, "rc", "rp", ease);      custrans(uae, 0, "rx", "ry", 0, 0, "rc", "rp", ease);      custrans(turkmenistan, 0, "rx", "ry", 0, 0, "rc", "rp", ease);      custrans(canada, speed, "cx", "cy", 0, 0, "cc", "noChange", ease);      custrans(japan, speed, "cx", "cy", 0, 0, "cc", "noChange", ease);      custrans(china, speed, "cx", "cy", 0, 0, "cc", "noChange", ease);      custrans(uk, speed, "cx", "cy", 0, 0, "cc", "noChange", ease);      ascend([usa, russia, iran]);            custrans(usa, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease);      custrans(russia, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease);      custrans(iran, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease);      custrans(qatar, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease);      custrans(saudi, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease)      custrans(uae, speed, "rx", "ry", "rw", "rh", "rc", "rp", ease)      custrans(turkmenistan,   speed, "rx", "ry", "rw", "rh", "rc", "rp", ease)            unlockNavigation();    }        public function permu_two_one():void    {      session.pageTwoIndex = 1;            var speed:Number = 1;      var ease:* = Quint.easeOut;            for each (var country:* in oneList)      {        country.visible = true;      }            custrans(norway, 0, "px", "py", "pw", 0, "pc", "pp", ease);      custrans(qatar, 0, "px", "py", 0, "ph", "pc", "pp", ease);      custrans(uk, speed, "cx", "cy", 0, 0, "cc", "noChange", ease);      custrans(iran, speed, "cx", "cy", 0, 0, "cc", "noChange", ease);      custrans(japan, speed, japan.cx + japan.ch + 30, "cy", 0, "noChange", "cc", "noChange", ease);      ascend([usa, russia, qatar]);      custrans(usa, speed, "px", "py", "pw", "ph", "pc", "pp", ease);      custrans(russia, speed, "px", "py", "pw", "ph", "pc", "pp", ease);      custrans(canada, speed, "px", "py", "pw", "ph", "pc", "pp", ease);      custrans(china, speed, "px", "py", "pw", "ph", "pc", "pp", ease);      custrans(norway, speed, "px", "py", "pw", "ph", "pc", "pp", ease, 0.2);      custrans(qatar, speed, "px", "py", "pw", "ph", "pc", "pp", ease);      unlockNavigation();    }        public function lockNavigation(event:Event = null):void    {      nav.mouseChildren = nav.mouseEnabled = false;    }        public function unlockNavigation(event:Event = null):void    {      nav.mouseChildren = nav.mouseEnabled = true;    }  }}