package ngs.model{  import flash.events.Event;  import flash.events.EventDispatcher;    public class Session extends EventDispatcher  {    private var _destinationIndex:Number = 0;    private var _yearlyConsumption:Number = 0;        public var pageOneFirstLoad = true;    public var pageOneIndex:Number = 0;    public var pageTwoRegistered = false;    public var pageTwoIndex:Number = 0;    public var pageTwoDestination:Number = 0;    public var pageThreeFirstLoad = true;    public var currentIndex:Number = 0;    public var currentIndexPage:*;        public static const UPDATE_PAGE_TWO:String = "updatePageTwo";    public static const YEARLY_CONSUMPTION_UPDATED:String = "yearlyConsumptionUpdated";    public static const LOCK_NAVIGATION:String = "lockNavigation";    public static const UNLOCK_NAVIGATION:String = "unlockNavigation";     public static const INDEX_UPDATED:String = "indexUpdated";    public static const UPDATE_VIEW:String = "updateView";        public function Session()    {      init();    }        public function init():void    {          }        public function updatePageTwo(index:Number):void    {      pageTwoDestination = index;      dispatchEvent(new Event(Session.UPDATE_PAGE_TWO));    }        public function set yearlyConsumption(val:Number):void    {      _yearlyConsumption = val;      dispatchEvent(new Event(Session.YEARLY_CONSUMPTION_UPDATED));    }        public function get yearlyConsumption():Number    {      return _yearlyConsumption;    }        public function set destinationIndex(index:Number):void    {      _destinationIndex = index;      dispatchEvent(new Event(Session.INDEX_UPDATED));    }        public function get destinationIndex():Number    {      return _destinationIndex;    }        public function updateView():void    {      dispatchEvent(new Event(Session.UPDATE_VIEW));    }        public function lockNavigation():void    {      dispatchEvent(new Event(Session.LOCK_NAVIGATION));    }        public function unlockNavigation():void    {      dispatchEvent(new Event(Session.UNLOCK_NAVIGATION));    }  }  }